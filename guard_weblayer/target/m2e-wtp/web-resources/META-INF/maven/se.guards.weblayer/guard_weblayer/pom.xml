<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
	http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>se.guards.weblayer</groupId>
	<artifactId>guard_weblayer</artifactId>
	<packaging>war</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>SpringMVC Maven Webapp</name>
	<url>http://maven.apache.org</url>

	<!-- Shared version number properties -->
	<properties>
		<java-version>1.6</java-version>
		<spring.version>3.1.2.RELEASE</spring.version>
		<org.springframework.security.version>3.1.4.RELEASE</org.springframework.security.version>
		<org.springframework.version>3.2.4.RELEASE</org.springframework.version>
		<org.aspectj-version>1.7.0</org.aspectj-version>
		<org.slf4j-version>1.6.6</org.slf4j-version>
		<jersey.version>1.8</jersey.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<!-- Spring JPA Data -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>1.4.3.RELEASE</version>
		</dependency>


		<!-- SMS -->
		<dependency>
			<groupId>javax.comm</groupId>
			<artifactId>comm</artifactId>
			<version>3.0-u1</version>
		</dependency>

		<dependency>
			<groupId>com.twilio.sdk</groupId>
			<artifactId>twilio-java-sdk</artifactId>
			<version>3.4.1</version>
			<scope>compile</scope>
		</dependency>
		<!-- There are 2 cases that you need to issue Maven’s command to include 
			a jar into the Maven local repository manually. The jar you want to use doesn’t 
			exist in the Maven center repository. You created a custom jar, and need 
			to use for another Maven project. P.S Trust me, there are still many jars 
			that doesn’t support Maven. Here I have build my own pom dependency for the 
			DHTMLX JavaPlanner mvn install:install-file -Dfile=/Users/iraj/Downloads/CALENDARS/javaplanner-v1.5/javaplanner-1.5.jar 
			-DgroupId=com.DHTMLX.JavaPlanner -DartifactId=javaplanner -Dversion=1.5 -Dpackaging=jar 
			<dependency> <groupId>com.DHTMLX.JavaPlanner</groupId> <artifactId>javaplanner</artifactId> 
			<version>1.5</version> </dependency> -->

		<dependency>
			<groupId>com.DHTMLX.JavaPlanner</groupId>
			<artifactId>javaplanner</artifactId>
			<version>1.5</version>
		</dependency>



		<!-- Velocity Mail -->

		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
			<version>1.7</version>
		</dependency>
		<!-- BCrypt -->

		<dependency>
			<groupId>org.mindrot</groupId>
			<artifactId>jbcrypt</artifactId>
			<version>0.3m</version>
		</dependency>

		<!-- restFul -->

		<dependency>
			<groupId>se.domainlayer.guard</groupId>
			<artifactId>guard_domain</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>se.datalayer.guards</groupId>
			<artifactId>guard_datalayer</artifactId>
			<version>1.0</version>
		</dependency>


		<!-- GSON -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.2.2</version>
		</dependency>


		<!-- JQUERY -->

		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery</artifactId>
			<version>1.9.1</version>
		</dependency>


		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>


		<!-- <dependency> -->
		<!-- <groupId>com.googlecode.wicket-jquery-ui</groupId> -->
		<!-- <artifactId>jquery-ui-kendo</artifactId> -->
		<!-- <version>6.1.1</version> -->
		<!-- </dependency> -->

		<!-- SASS OR SCSS -->

		<dependency>
			<groupId>org.jszip.gems</groupId>
			<artifactId>sass-lang</artifactId>
			<version>3.2.9</version>
		</dependency>


		<!-- Joda Time -->

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.1</version>
		</dependency>

		<!-- Excel -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.8</version>
		</dependency>

		<!-- PDF -->
		<dependency>
			<groupId>com.lowagie</groupId>
			<artifactId>itext</artifactId>
			<version>4.2.0</version>
		</dependency>


		<!-- Wicket DatePicker -->

		<dependency>
			<groupId>org.apache.wicket</groupId>
			<artifactId>wicket-datetime</artifactId>
			<version>1.5.5</version>
		</dependency>

		<!-- Google -->

		<dependency>
			<groupId>com.google.code.google-collections</groupId>
			<artifactId>google-collect</artifactId>
			<version>snapshot-20080530</version>
		</dependency>


		<!-- Gmail -->
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.5</version>
		</dependency>

		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>javax.mail-api</artifactId>
			<version>1.4.5</version>
		</dependency>

		<dependency>
			<groupId>javax.activation</groupId>
			<artifactId>activation</artifactId>
			<version>1.1.1</version>
		</dependency>




		<!-- Core utilities used by other modules. Define this if you use Spring 
			Utility APIs (org.springframework.core.*/org.springframework.util.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Expression Language (depends on spring-core) Define this if you use 
			Spring Expression APIs (org.springframework.expression.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define 
			this if you use Spring Bean APIs (org.springframework.beans.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, 
			spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Application Context (depends on spring-core, spring-expression, spring-aop, 
			spring-beans) This is the central artifact for Spring's Dependency Injection 
			Container and is generally always defined -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Various Application Context utilities, including EhCache, JavaMail, 
			Quartz, and Freemarker integration Define this if you need any of these integrations -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Transaction Management Abstraction (depends on spring-core, spring-beans, 
			spring-aop, spring-context) Define this if you use Spring Transactions or 
			DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, 
			spring-tx) Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, 
			and iBatis. (depends on spring-core, spring-beans, spring-context, spring-tx) 
			Define this if you need ORM (org.springframework.orm.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, 
			JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans, 
			spring-context) Define this if you need OXM (org.springframework.oxm.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Web application development utilities applicable to both Servlet and 
			Portlet Environments (depends on spring-core, spring-beans, spring-context) 
			Define this if you use Spring MVC, or wish to use Struts, JSF, or another 
			web framework with Spring (org.springframework.web.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Spring MVC for Servlet Environments (depends on spring-core, spring-beans, 
			spring-context, spring-web) Define this if you use Spring MVC with a Servlet 
			Container such as Apache Tomcat (org.springframework.web.servlet.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Spring MVC for Portlet Environments (depends on spring-core, spring-beans, 
			spring-context, spring-web) Define this if you use Spring MVC with a Portlet 
			Container (org.springframework.web.portlet.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc-portlet</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Support for testing Spring applications with tools such as JUnit and 
			TestNG This artifact is generally always defined with a 'test' scope for 
			the integration testing framework and unit testing stubs -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
			<scope>test</scope>
		</dependency>



		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${org.springframework.security.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${org.springframework.security.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${org.springframework.security.version}</version>
		</dependency>

		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>

		<!-- jstl -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>3.0-alpha-1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.2.1-b03</version>
			<scope>provided</scope>
		</dependency>


		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		
		
		<!-- Jersey Client -->
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
		</dependency>


		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-multipart</artifactId>
			<version>${jersey.version}</version>
		</dependency>

		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-client</artifactId>
			<version>${jersey.version}</version>
		</dependency>

		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-json</artifactId>
			<version>${jersey.version}</version>
		</dependency>

		<!-- MySQL database driver -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.9</version>
		</dependency>
		<!-- JSR 303 with Hibernate Validator -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.0.0.GA</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.1.0.Final</version>
		</dependency>

		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>


		<!-- FTP -->

		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>3.1</version>
		</dependency>


		<dependency>
			<groupId>org.bluestemsoftware.open.maven.plugin</groupId>
			<artifactId>ftp-plugin</artifactId>
			<version>1.0.0.1</version>
		</dependency>


	</dependencies>


	<repositories>
	
		<!-- For main Spring releases -->
		<repository>
			<id>org.springframework.maven.release</id>
			<name>Spring Maven Release Repository</name>
			<url>http://maven.springframework.org/release</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

		<!-- For testing against latest Spring snapshots -->
		<repository>
			<id>org.springframework.maven.snapshot</id>
			<name>Spring Maven Snapshot Repository</name>
			<url>http://maven.springframework.org/snapshot</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>

		<!-- For developing against latest Spring milestones -->
		<repository>
			<id>org.springframework.maven.milestone</id>
			<name>Spring Maven Milestone Repository</name>
			<url>http://maven.springframework.org/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<build>
		<finalName>guard_weblayer</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<!-- projectNameTemplate>[artifactId]-[version]</projectNameTemplate -->
					<wtpmanifest>true</wtpmanifest>
					<wtpversion>2.0</wtpversion>
					<useProjectReferences>false</useProjectReferences>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<wtpmanifest>true</wtpmanifest>
					<wtpversion>2.0</wtpversion>
					<useProjectReferences>false</useProjectReferences>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>install</id>
						<phase>install</phase>
						<goals>
							<goal>sources</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<groupId>com.googlecode.velocity-maven-plugin</groupId>
				<artifactId>velocity-maven-plugin</artifactId>
				<version>1.0.0</version>
				<configuration>
					<templateFiles>
						<directory>/src/main/resources</directory>
						<includes>
							<include>*.vm</include>
						</includes>
					</templateFiles>
					<templateValues>
						<test>foo</test>
					</templateValues>
				</configuration>
			</plugin>
			
			
<!-- 			<plugin> -->
<!--     <groupId>org.jasig.maven</groupId> -->
<!--     <artifactId>sass-maven-plugin</artifactId> -->
<!--     <version>1.1.0</version> -->
<!--     <executions> -->
<!--         <execution> -->
<!--             <id>package</id> -->
<!--             <phase>prepare-package</phase> -->
<!--             <goals> -->
<!--                 <goal>update-stylesheets</goal> -->
<!--             </goals> -->
<!--         </execution> -->
<!--     </executions> -->
<!--     <configuration> -->
<!--         <resources> -->
<!--             <resource> -->
<!--                 <source> -->
<!--                     <directory>${basedir}/src/main/stylesheets</directory> -->
<!--                 </source> -->
<!--                 <destination>${project.basedir}/src/main/webapp/resources/stylesheets</destination> -->
<!--             </resource> -->
<!--         </resources> -->
<!--     </configuration> -->
<!-- </plugin> -->
			
			
			
			
		</plugins>
	</build>

</project>